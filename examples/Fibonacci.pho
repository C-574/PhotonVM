-- Mapping Table:
-- -----------------
-- N:		| reg0
-- Fib		| reg1
-- FibN-1	| tmp0
-- FibN-2	| tmp1
-- i		| tmp2 
-- blockSize| tmp3
--------------------

-- Defines the iteration count of the algorithm.
setreg reg0 #6

-- Define the variables that are used to compute the sequence.
setreg reg1 #0
setreg tmp0 #0
setreg tmp1 #1


-- tmp3 = instruction count of loop-block (lS).
setreg tmp3 #9
-- tmp2 = start index of loop (i).
setreg tmp2 #2

-- while(i < N) ...
grtreg local tmp2 reg0
mulreg local local tmp3
jump local
-- BEGIN - While
addreg reg1 tmp0 tmp1
cpyreg tmp0 tmp1
cpyreg tmp1 reg1

-- Increment the loop counter 'i'.
setreg local #1
addreg tmp2 tmp2 local
-- jump back to the loop-head.
setreg local #10
invreg local
jump local
-- END - While


-- Dump the result to the screen. 'N' => 'Fib'
cpyreg local reg0
hcall $0 #2
setreg local #32
hcall $0 #3
setreg local #61
hcall $0 #3
setreg local #62
hcall $0 #3
setreg local #32
hcall $0 #3
cpyreg local tmp1
hcall $0 #2
setreg local #10
hcall $0 #3
halt 